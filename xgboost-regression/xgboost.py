# -*- coding: utf-8 -*-
"""xgboost.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1h-mtEW5LZ6SV932HJeZiPN6e2tVk5_hh
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from xgboost import XGBRegressor
from sklearn import metrics

input_sales_data = pd.read_csv('/content/simple - Sheet1.csv')

input_sales_data.info()

input_sales_data.isnull().sum()

encoder = LabelEncoder()
input_sales_data['BillingDate'] = encoder.fit_transform(input_sales_data['BillingDate'])
# input_sales_data['Region'] = encoder.fit_transform(input_sales_data['Region'])
# input_sales_data['Customer Number'] = encoder.fit_transform(input_sales_data['Customer Number'])
# input_sales_data['Material Number'] = encoder.fit_transform(input_sales_data['Material Number'])
# input_sales_data['Organization ID'] = encoder.fit_transform(input_sales_data['Organization ID'])

X = input_sales_data.drop(columns='NetValue', axis=1)
Y = input_sales_data['NetValue']

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=2)
regressor = XGBRegressor()
regressor.fit(X_train, Y_train)
training_data_prediction = regressor.predict(X_train)
print(training_data_prediction)
r2_train = metrics.r2_score(Y_train, training_data_prediction)
print('R Squared value = ', r2_train)
test_data_prediction = regressor.predict(X_test)
r2_test = metrics.r2_score(Y_test, test_data_prediction)
print('R Squared value = ', r2_test)